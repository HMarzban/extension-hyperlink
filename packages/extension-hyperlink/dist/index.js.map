{"version":3,"file":"index.js","sources":["../src/helpers/autoHyperlink.ts","../src/helpers/tippyHelper.ts","../src/helpers/clickHandler.ts","../src/helpers/pasteHandler.ts","../src/helpers/editHyperlink.ts","../src/hyperlink.ts"],"sourcesContent":["import {\n  combineTransactionSteps,\n  findChildrenInRange,\n  getChangedRanges,\n  getMarksBetween,\n  NodeWithPos,\n} from \"@tiptap/core\";\nimport { MarkType } from \"@tiptap/pm/model\";\nimport { Plugin, PluginKey } from \"@tiptap/pm/state\";\nimport { find, test } from \"linkifyjs\";\n\ntype AutoHyperlinkOptions = {\n  type: MarkType;\n  validate?: (url: string) => boolean;\n};\n\nexport default function autoHyperlink(options: AutoHyperlinkOptions): Plugin {\n  return new Plugin({\n    key: new PluginKey(\"autoHyperlink\"),\n    appendTransaction: (transactions, oldState, newState) => {\n      const docChanges =\n        transactions.some((transaction) => transaction.docChanged) &&\n        !oldState.doc.eq(newState.doc);\n      const preventAutoHyperlink = transactions.some((transaction) =>\n        transaction.getMeta(\"preventAutoHyperlink\")\n      );\n\n      if (!docChanges || preventAutoHyperlink) {\n        return;\n      }\n\n      const { tr } = newState;\n      const transform = combineTransactionSteps(oldState.doc, [\n        ...transactions,\n      ]);\n      const { mapping } = transform;\n      const changes = getChangedRanges(transform);\n\n      changes.forEach(({ oldRange, newRange }) => {\n        // at first we check if we have to remove links\n        getMarksBetween(oldRange.from, oldRange.to, oldState.doc)\n          .filter((item) => item.mark.type === options.type)\n          .forEach((oldMark) => {\n            const newFrom = mapping.map(oldMark.from);\n            const newTo = mapping.map(oldMark.to);\n            const newMarks = getMarksBetween(\n              newFrom,\n              newTo,\n              newState.doc\n            ).filter((item) => item.mark.type === options.type);\n\n            if (!newMarks.length) {\n              return;\n            }\n\n            const newMark = newMarks[0];\n            const oldLinkText = oldState.doc.textBetween(\n              oldMark.from,\n              oldMark.to,\n              undefined,\n              \" \"\n            );\n            const newLinkText = newState.doc.textBetween(\n              newMark.from,\n              newMark.to,\n              undefined,\n              \" \"\n            );\n            const wasLink = test(oldLinkText);\n            const isLink = test(newLinkText);\n\n            // remove only the link, if it was a link before too\n            // because we don’t want to remove links that were set manually\n            if (wasLink && !isLink) {\n              tr.removeMark(newMark.from, newMark.to, options.type);\n            }\n          });\n\n        // now let’s see if we can add new links\n        const nodesInChangedRanges = findChildrenInRange(\n          newState.doc,\n          newRange,\n          (node) => node.isTextblock\n        );\n\n        let textBlock: NodeWithPos | undefined;\n        let textBeforeWhitespace: string | undefined;\n\n        if (nodesInChangedRanges.length > 1) {\n          // Grab the first node within the changed ranges (ex. the first of two paragraphs when hitting enter)\n          textBlock = nodesInChangedRanges[0];\n          textBeforeWhitespace = newState.doc.textBetween(\n            textBlock.pos,\n            textBlock.pos + textBlock.node.nodeSize,\n            undefined,\n            \" \"\n          );\n        } else if (\n          nodesInChangedRanges.length &&\n          // We want to make sure to include the block seperator argument to treat hard breaks like spaces\n          newState.doc\n            .textBetween(newRange.from, newRange.to, \" \", \" \")\n            .endsWith(\" \")\n        ) {\n          textBlock = nodesInChangedRanges[0];\n          textBeforeWhitespace = newState.doc.textBetween(\n            textBlock.pos,\n            newRange.to,\n            undefined,\n            \" \"\n          );\n        }\n\n        if (textBlock && textBeforeWhitespace) {\n          const wordsBeforeWhitespace = textBeforeWhitespace\n            .split(\" \")\n            .filter((s) => s !== \"\");\n\n          if (wordsBeforeWhitespace.length <= 0) {\n            return false;\n          }\n\n          const lastWordBeforeSpace =\n            wordsBeforeWhitespace[wordsBeforeWhitespace.length - 1];\n          const lastWordAndBlockOffset =\n            textBlock.pos +\n            textBeforeWhitespace.lastIndexOf(lastWordBeforeSpace);\n\n          if (!lastWordBeforeSpace) {\n            return false;\n          }\n\n          find(lastWordBeforeSpace)\n            .filter((link) => link.isLink)\n            .filter((link) => {\n              if (options.validate) {\n                return options.validate(link.value);\n              }\n              return true;\n            })\n            // calculate link position\n            .map((link) => ({\n              ...link,\n              from: lastWordAndBlockOffset + link.start + 1,\n              to: lastWordAndBlockOffset + link.end + 1,\n            }))\n            // add link mark\n            .forEach((link) => {\n              tr.addMark(\n                link.from,\n                link.to,\n                options.type.create({\n                  href: link.href,\n                })\n              );\n            });\n        }\n      });\n\n      if (!tr.steps.length) {\n        return;\n      }\n\n      return tr;\n    },\n  });\n}\n","import tippy, { Instance, Props, roundArrow } from \"tippy.js\";\nimport { Editor } from \"@tiptap/core\";\nimport { EditorView } from \"@tiptap/pm/view\";\nimport { getAttributes, posToDOMRect } from \"@tiptap/core\";\n\nlet tippyInstance: Instance | undefined;\nlet preventHide: boolean = false;\nlet tippyWrapper: HTMLDivElement;\nlet editor: Editor;\nlet view: EditorView;\n\ntype TippyInitOptions = {\n  editor: Editor;\n  validate?: (url: string) => boolean;\n  view: EditorView;\n};\n\nexport const init = (options: TippyInitOptions) => {\n  editor = options.editor;\n  view = options.view;\n  if (!tippyInstance) {\n    tippyWrapper = document.createElement(\"div\");\n    tippyWrapper.addEventListener(\"mousedown\", mousedownHandler, {\n      capture: true,\n    });\n    view.dom.addEventListener(\"dragstart\", dragstartHandler);\n    editor.on(\"focus\", focusHandler);\n    editor.on(\"blur\", blurHandler);\n  }\n\n  return { tippyModal: tippyWrapper, tippyInstance: tippyInstance };\n};\n\nexport const show = () => {\n  tippyInstance?.show();\n  return true;\n};\n\nexport const hide = () => {\n  setTimeout(() => tippyInstance?.hide());\n  return false;\n};\n\nexport const mousedownHandler = () => {\n  preventHide = true;\n};\n\nexport const dragstartHandler = () => {\n  hide();\n};\n\nexport const focusHandler = () => {\n  setTimeout(() => update(editor.view));\n};\n\nconst blurHandler = ({ event }: { event: FocusEvent }) => {\n  if (preventHide) {\n    preventHide = false;\n    return;\n  }\n  if (event?.relatedTarget && tippyWrapper.parentNode?.contains(event.relatedTarget as Node)) {\n    return;\n  }\n  hide();\n};\n\nconst tippyBlurHandler = (event: FocusEvent) => {\n  blurHandler({ event });\n};\n\nconst createTooltip = () => {\n  if (!editor || !editor.options) return;\n  const { element: editorElement } = editor.options;\n  const editorIsAttached = !!editorElement.parentElement;\n\n  if (tippyInstance || !editorIsAttached) {\n    return;\n  }\n\n  tippyInstance = tippy(editorElement, {\n    duration: 0,\n    getReferenceClientRect: null,\n    content: tippyWrapper,\n    interactive: true,\n    trigger: \"manual\",\n    placement: \"bottom\",\n    hideOnClick: \"toggle\",\n  });\n\n  if (tippyInstance.popper.firstChild) {\n    (tippyInstance.popper.firstChild as HTMLElement).addEventListener(\"blur\", tippyBlurHandler);\n  }\n};\n\nexport const update = (view: EditorView, option: any = {}) => {\n  createTooltip();\n\n  // Ensure 'arrow' is false when not provided\n  option.arrow = option?.arrow ?? false;\n\n  if (tippyInstance) {\n    tippyInstance.setProps({\n      ...option,\n      getReferenceClientRect: () => {\n        const pos = view.state.selection.from;\n        return posToDOMRect(view, pos, pos);\n      },\n    });\n    show();\n  }\n\n  return {};\n};\n\nexport const destroyTooltip = () => {\n  if (tippyInstance) {\n    tippyInstance.destroy();\n    tippyInstance = undefined;\n    tippyWrapper.removeEventListener(\"mousedown\", mousedownHandler, {\n      capture: true,\n    });\n    view.dom.removeEventListener(\"dragstart\", dragstartHandler);\n    editor.off(\"focus\", focusHandler);\n    editor.off(\"blur\", blurHandler);\n  }\n};\n","import { getAttributes } from \"@tiptap/core\";\nimport { MarkType } from \"@tiptap/pm/model\";\nimport { Plugin, PluginKey } from \"@tiptap/pm/state\";\nimport { Editor } from \"@tiptap/core\";\nimport { EditorView } from \"@tiptap/pm/view\";\nimport * as tippy from \"./tippyHelper\";\n// import \"tippy.js/dist/svg-arrow.css\";\n\n// Define type for the ClickHandlerOptions\ntype ClickHandlerOptions = {\n  type: MarkType;\n  editor: Editor;\n  validate?: (url: string) => boolean;\n  view: EditorView;\n  modals: {\n    previewHyperlink?: ((options: any) => HTMLElement) | null;\n    setHyperlink?: ((options: any) => HTMLElement) | null;\n  };\n};\n\nexport default function clickHandler(options: ClickHandlerOptions): Plugin {\n  const { tippyModal } = tippy.init(options);\n\n  return new Plugin({\n    key: new PluginKey(\"handleClickHyperlink\"),\n    props: {\n      handleClick: (view, pos, event) => {\n        if (event.button !== 0) return false;\n\n        // Get the target HTML element and its position\n        const nodeTarget: HTMLElement = event.target as HTMLElement;\n        const nodePos = view.posAtDOM(nodeTarget, 0);\n\n        // Find the closest link element to the target element\n        const link = nodeTarget?.closest(\"a\");\n\n        // Extract attributes from the state\n        const attrs = getAttributes(view.state, options.type.name);\n\n        // Extract href and target attributes from the link element or the state\n        const href = link?.href ?? attrs.href;\n        const target = link?.target ?? attrs.target;\n\n        // If there is no previewHyperlink modal provided, then open the link in new window\n        if (!options.modals.previewHyperlink) {\n          if (link && href) {\n            window.open(href, target);\n          }\n          return true;\n        }\n\n        // if the link does not contain href attribute, hide the tooltip\n        if (!link?.href) return tippy.hide();\n\n        // Create a preview of the hyperlink\n        const hyperlinkPreview = options.modals.previewHyperlink({\n          link,\n          nodePos,\n          ...options,\n        });\n\n        // If there is no hyperlink preview, hide the modal\n        if (!hyperlinkPreview) return tippy.hide();\n\n        // Empty the modal and append the hyperlink preview box\n        tippyModal.innerHTML = \"\";\n        tippyModal.append(hyperlinkPreview);\n\n        // Update the modal position\n        tippy.update(options.view);\n\n        return false;\n      },\n    },\n  });\n}\n","import { Editor } from \"@tiptap/core\";\nimport { MarkType } from \"@tiptap/pm/model\";\nimport { Plugin, PluginKey } from \"@tiptap/pm/state\";\nimport { find } from \"linkifyjs\";\n\ntype PasteHandlerOptions = {\n  editor: Editor;\n  type: MarkType;\n};\n\nexport function pasteHandler(options: PasteHandlerOptions): Plugin {\n  return new Plugin({\n    key: new PluginKey(\"handlePasteHyperlink\"),\n    props: {\n      handlePaste: (view, event, slice) => {\n        const { state } = view;\n        const { selection } = state;\n        const { empty } = selection;\n\n        if (empty) {\n          return false;\n        }\n\n        let textContent = \"\";\n\n        slice.content.forEach((node) => {\n          textContent += node.textContent;\n        });\n\n        const link = find(textContent).find(\n          (item) => item.isLink && item.value === textContent\n        );\n\n        if (!textContent || !link) {\n          return false;\n        }\n\n        options.editor.commands.setMark(options.type, {\n          href: link.href,\n        });\n\n        return true;\n      },\n    },\n  });\n}\n","import { Editor } from \"@tiptap/core\";\nimport { find } from \"linkifyjs\";\n\ntype EditHyperlinkOptions = {\n  editor: Editor;\n  validate?: (url: string) => boolean;\n  newURL?: string;\n  newText?: string;\n};\n\nexport default function editHyperlink(options: EditHyperlinkOptions) {\n  const { state, dispatch } = options.editor.view;\n  const { from, to } = state.selection;\n  let link: HTMLAnchorElement | null = null;\n\n  const selectedNode = options.editor.view.domAtPos(from - 1)\n    .node as HTMLElement;\n\n  if (selectedNode?.nodeName === \"#text\") {\n    link = (selectedNode.parentNode as HTMLElement)?.closest(\"a\");\n  } else {\n    link = selectedNode?.closest(\"a\");\n  }\n\n  if (!link) return true;\n\n  const text = options.newText || link?.innerText;\n  // Get the position of the link in the editor view\n  const nodePos = options.editor.view.posAtDOM(link, 0);\n\n  const sanitizeURL = find(options.newURL || link.href)\n    .filter((link) => link.isLink)\n    .filter((link) => (options.validate ? options.validate(link.value) : true))\n    .at(0);\n\n  return options.editor\n    .chain()\n    .focus()\n    .command(({ tr }) => {\n      // The command replaces the range from nodePos to nodePos + length of the text\n      // with a new text node with the provided text and a link mark with the sanitized URL\n      tr.replaceWith(\n        nodePos,\n        nodePos + text?.length,\n        options.editor.schema.text(text, [\n          options.editor.schema.marks.hyperlink.create({\n            href: sanitizeURL?.href,\n          }),\n        ])\n      );\n\n      return true;\n    })\n    .run();\n}\n","import { Mark, markPasteRule, mergeAttributes } from \"@tiptap/core\";\nimport { Plugin } from \"@tiptap/pm/state\";\nimport { find, registerCustomProtocol, reset } from \"linkifyjs\";\nimport autoHyperlink from \"./helpers/autoHyperlink\";\nimport clickHandler from \"./helpers/clickHandler\";\nimport { pasteHandler } from \"./helpers/pasteHandler\";\nimport editHyperlinkHelper from \"./helpers/editHyperlink\";\n\nexport interface LinkProtocolOptions {\n  scheme: string;\n  optionalSlashes?: boolean;\n}\n\nexport interface HyperlinkOptions {\n  /**\n   * If enabled, it adds links as you type.\n   */\n  autoHyperlink: boolean;\n  /**\n   * An array of custom protocols to be registered with linkifyjs.\n   */\n  protocols: Array<LinkProtocolOptions | string>;\n  /**\n   * If enabled, links will be opened on click.\n   */\n  openOnClick: boolean;\n  /**\n   * Adds a link to the current selection if the pasted content only contains an url.\n   */\n  hyperlinkOnPaste: boolean;\n  /**\n   * A list of HTML attributes to be rendered.\n   */\n  HTMLAttributes: Record<string, any>;\n  /**\n   * A list of modals to be rendered.\n   * @default null\n   * @example\n   */\n  modals: {\n    previewHyperlink?: ((options: any) => HTMLElement) | null;\n    setHyperlink?: ((options: any) => HTMLElement) | null;\n  };\n  /**\n   * A validation function that modifies link verification for the auto linker.\n   * @param url - The url to be validated.\n   * @returns - True if the url is valid, false otherwise.\n   */\n  validate?: (url: string) => boolean;\n}\n\ndeclare module \"@tiptap/core\" {\n  interface Commands<ReturnType> {\n    link: {\n      /**\n       * Edit the hyperlink's text\n       */\n      editHyperLinkText: (text: string) => ReturnType;\n\n      /**\n       * Edit the hyperlink's href value\n       */\n      editHyperLinkHref: (href: string) => ReturnType;\n\n      /**\n       * Edit the hyperlink's\n       */\n      editHyperlink: (attributes?: { newText?: string; newURL?: string }) => ReturnType;\n\n      /**\n       *  Set a hyperlink\n       */\n      setHyperlink: (attributes?: { href: string; target?: string | null }) => ReturnType;\n\n      /**\n       * Unset a link mark\n       */\n      unsetHyperlink: () => ReturnType;\n    };\n  }\n}\n\nexport const Hyperlink = Mark.create<HyperlinkOptions>({\n  name: \"hyperlink\",\n\n  priority: 1000,\n\n  keepOnSplit: false,\n\n  onCreate() {\n    this.options.protocols.forEach((protocol) => {\n      if (typeof protocol === \"string\") {\n        registerCustomProtocol(protocol);\n        return;\n      }\n      registerCustomProtocol(protocol.scheme, protocol.optionalSlashes);\n    });\n  },\n\n  onDestroy() {\n    reset();\n  },\n\n  inclusive() {\n    return this.options.autoHyperlink;\n  },\n\n  addOptions() {\n    return {\n      openOnClick: true,\n      hyperlinkOnPaste: true,\n      autoHyperlink: true,\n      protocols: [],\n      HTMLAttributes: {\n        target: \"_blank\",\n        rel: \"noopener noreferrer nofollow\",\n        class: null,\n      },\n      modals: {\n        previewHyperlink: null,\n        setHyperlink: null,\n      },\n      validate: undefined,\n    };\n  },\n\n  addAttributes() {\n    return {\n      href: {\n        default: null,\n      },\n      target: {\n        default: this.options.HTMLAttributes.target,\n      },\n      class: {\n        default: this.options.HTMLAttributes.class,\n      },\n    };\n  },\n\n  parseHTML() {\n    return [{ tag: 'a[href]:not([href *= \"javascript:\" i])' }];\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return [\"a\", mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\n  },\n\n  addCommands() {\n    return {\n      setHyperlink:\n        (attributes) =>\n        ({ editor, chain }) => {\n          if (!this.options.modals.setHyperlink) {\n            return chain()\n              .setMark(this.name, attributes)\n              .setMeta(\"preventAutohyperlink\", true)\n              .run();\n          } else {\n            this.options.modals.setHyperlink({\n              editor,\n              validate: this.options.validate,\n              extentionName: this.name,\n              attributes,\n            });\n            return true;\n          }\n        },\n\n      editHyperlink:\n        (attributes) =>\n        ({ editor }) => {\n          return editHyperlinkHelper({\n            ...attributes,\n            editor,\n            validate: this.options.validate,\n          });\n        },\n\n      editHyperLinkText:\n        (newText) =>\n        ({ editor }) => {\n          return editHyperlinkHelper({\n            editor,\n            newText,\n            validate: this.options.validate,\n          });\n        },\n\n      editHyperLinkHref:\n        (newURL) =>\n        ({ editor }) => {\n          return editHyperlinkHelper({\n            editor,\n            validate: this.options.validate,\n            newURL,\n          });\n        },\n\n      unsetHyperlink:\n        () =>\n        ({ chain }) => {\n          return chain()\n            .unsetMark(this.name, { extendEmptyMarkRange: true })\n            .setMeta(\"preventAutohyperlink\", true)\n            .run();\n        },\n    };\n  },\n\n  addPasteRules() {\n    return [\n      markPasteRule({\n        find: (text) =>\n          find(text)\n            .filter((link) => {\n              if (this.options.validate) {\n                return this.options.validate(link.value);\n              }\n\n              return true;\n            })\n            .filter((link) => link.isLink)\n            .map((link) => ({\n              text: link.value,\n              index: link.start,\n              data: link,\n            })),\n        type: this.type,\n        getAttributes: (match) => ({\n          href: match.data?.href,\n        }),\n      }),\n    ];\n  },\n\n  addProseMirrorPlugins() {\n    const plugins: Plugin[] = [];\n\n    if (this.options.autoHyperlink) {\n      plugins.push(\n        autoHyperlink({\n          type: this.type,\n          validate: this.options.validate,\n        })\n      );\n    }\n\n    if (this.options.openOnClick) {\n      plugins.push(\n        clickHandler({\n          type: this.type,\n          editor: this.editor,\n          validate: this.options.validate,\n          view: this.editor.view,\n          modals: this.options.modals,\n        })\n      );\n    }\n\n    if (this.options.hyperlinkOnPaste) {\n      plugins.push(\n        pasteHandler({\n          editor: this.editor,\n          type: this.type,\n        })\n      );\n    }\n\n    return plugins;\n  },\n});\n"],"names":["tippy.init","tippy.hide","tippy.update","editHyperlinkHelper"],"mappings":"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"}